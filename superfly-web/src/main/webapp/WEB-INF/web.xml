<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
	      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	      version="3.0">
    
    <session-config>
        <session-timeout>15</session-timeout>
        <cookie-config>
            <http-only>true</http-only>
            <secure>true</secure>
        </cookie-config>
    </session-config>
    
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring/applicationContext-security.xml
            /WEB-INF/spring/applicationContext-common.xml
            /WEB-INF/spring/applicationContext-datasource.xml
            /WEB-INF/spring/applicationContext-dao.xml
            /WEB-INF/spring/applicationContext-service.xml
            /WEB-INF/spring/applicationContext-aop.xml
            /WEB-INF/spring/applicationContext-quartz.xml
            /WEB-INF/spring/applicationContext-remote.xml
            /WEB-INF/spring/applicationContext-web.xml
        </param-value>
    </context-param>
    <context-param>
        <param-name>logbackConfigLocation</param-name>
        <param-value>/WEB-INF/logback.xml</param-value>
    </context-param>
    <context-param>
        <param-name>configuration</param-name>
        <param-value>deployment</param-value>
    </context-param>
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>superfly</param-value>
    </context-param>

    <context-param>
        <param-name>superfly-policy</param-name>
        <param-value>pcidss</param-value> <!-- none or pcidss -->
    </context-param>

    <!-- multi-factor authentication -->
    <context-param>
        <param-name>superfly-mfa-enabled</param-name>
        <param-value>false</param-value>
    </context-param>
    <!-- Force users to use this MFA method, if superfly-mfa-enabled = true -->
    <context-param>
        <param-name>superfly-mfa-method-force</param-name>
        <param-value>none</param-value> <!-- none or google_auth -->
    </context-param>

    <!-- This is for constant salt generator -->
    <context-param>
        <param-name>superfly-salt</param-name>
        <param-value>kdjfKJ48jfjf$Etj84f>DFJ48fj4fzFJdf8jADfj84fjaijdf84jfjzdfjakjfajf8j4qaq</param-value>
    </context-param>

    <context-param>
        <param-name>superfly-max-logins-failed</param-name>
        <param-value>6</param-value>
    </context-param>

    <!--
        ### Deprecated, use superfly-mfa-method-force for multi-factor authentication

        Modification of ANY of HOTP-related parameters here (except for
        lookahead window size) must be followed by regeneration of user tokens
        as server-side HOTP sequences will be changed.
        Table size leads to table of distinct size, but the sequence remains
        the same. -->
    <context-param>
        <param-name>superfly-hotpMasterKey</param-name>
        <param-value>dakjf89j4f89j4faio[jf89j4fkl;mdAKDJFLAKJ4Fkdfjliajf894jfozjdf</param-value>
    </context-param>
    <context-param>
        <param-name>superfly-hotpCodeDigits</param-name>
        <param-value>6</param-value>
    </context-param>

    <context-param>
        <param-name>superfly-hotpLookahead</param-name>
        <param-value>10</param-value>
    </context-param>
    <context-param>
        <param-name>superfly-hotpTableSize</param-name>
        <param-value>100</param-value>
    </context-param>
    <context-param>
        <param-name>superfly-enable-hotp-emails</param-name>
        <param-value>false</param-value>
    </context-param>
    <context-param>
        <param-name>superfly-csrf-login-validator-enable</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
           <param-name>superfly-max-sso-session-age-minutes</param-name>
           <param-value>30</param-value>
    </context-param>

    <context-param>
        <param-name>superfly-cryptoSecret</param-name>
        <param-value>GOOGLE_AUTH_OTP_SECRET</param-value>
    </context-param>

    <context-param>
        <param-name>superfly-cryptoSalt</param-name>
        <param-value>GOOGLE_AUTH_OTP_SALT</param-value>
    </context-param>

    <context-param>
        <param-name>logbackConfigLocation</param-name>
        <param-value>file:src/test/resources/logback-test.xml</param-value>
    </context-param>

    <listener>
        <listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
    </listener>
    <listener>
        <listener-class>com.payneteasy.superfly.web.spring.CustomContextLoaderListener</listener-class>
    </listener>
    
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>cookieEnforcer</filter-name>
        <filter-class>com.payneteasy.superfly.web.servlet.CookieEnforcer</filter-class>
    </filter>
    
    <filter>
      <filter-name>springSecurityFilterChain</filter-name>
      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>cookieEnforcer</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>remoting</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>remoting</servlet-name>
        <url-pattern>/remoting/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>version</servlet-name>
        <servlet-class>com.payneteasy.superfly.web.servlet.VersionNumberServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>version</servlet-name>
        <url-pattern>/management/version.txt</url-pattern>
    </servlet-mapping>
    
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <!-- WICKET -->

    <filter>
        <filter-name>wicket.superfly</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>com.payneteasy.superfly.web.wicket.SuperflyApplication</param-value>
        </init-param>
        <init-param>
            <param-name>ignorePaths</param-name>
            <param-value>/remoting/,/sso/,/management/version.txt</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>wicket.superfly</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>wicket.sso</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>com.payneteasy.superfly.web.wicket.SSOApplication</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>wicket.sso</filter-name>
        <url-pattern>/sso/*</url-pattern>
    </filter-mapping>

    <error-page>
        <error-code>400</error-code>
        <location>/error-400.htm</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/error-403.htm</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/error-404.htm</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error-500.htm</location>
    </error-page>
    <error-page>
        <error-code>503</error-code>
        <location>/error-503.htm</location>
    </error-page>

    <!-- global error handler for all error codes that are not listed explicitly -->
    <error-page>
        <location>/error-500.htm</location>
    </error-page>

    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error-500.htm</location>
    </error-page>

</web-app>
